/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pillarBabysitteraKata;

import org.junit.Test;

import pillarBabysitterKata.Babysitter;

import static org.junit.Assert.*;

public class BabysitterTest {
	Babysitter Kate = new Babysitter();
    
	@Test
	public void validateWithinHoursOfAvailability () {
		
		Kate.setStartTime(17);
		Kate.setEndTime(28);
		boolean expected = true;
		boolean actual = Kate.validateWithinHoursOfAvailability(17, 28);
		assertEquals(expected, actual);
	}
	
	@Test
	public void familyATotalBasedOnServiceNeeds() {
		
		Kate.setFamily("a");
		Kate.setStartTime(20);
		Kate.setLatePayStartTime(23);
		Kate.setEndTime(26);
		Kate.setEarlyPay(15);
		Kate.setLatePay(20);
		int expected = 105;
		int actual = Kate.familyTotalBasedOnServiceNeeds();
		assertEquals(expected, actual);
	}
	
	@Test 
	public void FamilyBtotalBasedOnServiceNeeds() {
		
		Kate.setFamily("b");
		Kate.setStartTime(20);
		Kate.setLatePayStartTime(24);
		Kate.setSpecialScheduleStart(22);
		Kate.setSpecialScheduleEnd(24);
		Kate.setEndTime(25);
		Kate.setEarlyPay(12);
		Kate.setSpecialPay(8);
		Kate.setLatePay(16);
		int expected = 56;
		int actual = Kate.familyTotalBasedOnServiceNeeds();
		assertEquals(expected, actual);
		
	}
	
	@Test 
	public void FamilyBTotalBasedOnServiceNeeds2() {
		Kate.setFamily("b");
		Kate.setStartTime(19);
		Kate.setLatePayStartTime(24);
		Kate.setSpecialScheduleStart(22);
		Kate.setSpecialScheduleEnd(24);
		Kate.setEndTime(26);
		Kate.setEarlyPay(12);
		Kate.setSpecialPay(8);
		Kate.setLatePay(16);
		int expected = 84;
		int actual = Kate.familyTotalBasedOnServiceNeeds();
		assertEquals(expected, actual);
	}
	
	@Test 
	public void FamilyBTotalBasedOnServiceNeeds3() {
		Kate.setFamily("b");
		Kate.setStartTime(22);
		Kate.setLatePayStartTime(24);
		Kate.setSpecialScheduleStart(22);
		Kate.setSpecialScheduleEnd(24);
		Kate.setEndTime(24);
		Kate.setEarlyPay(12);
		Kate.setSpecialPay(8);
		Kate.setLatePay(16);
		int expected = 16;
		int actual = Kate.familyTotalBasedOnServiceNeeds();
		assertEquals(expected, actual);
	}
	
	@Test 
	public void familyCTotalBasedOnServiceNeeeds() {
		Kate.setFamily("c");
		Kate.setStartTime(18);
		Kate.setLatePayStartTime(21);
		Kate.setEndTime(22);
		Kate.setEarlyPay(21);
		Kate.setLatePay(15);
		int expected = 78;
		int actual = Kate.familyTotalBasedOnServiceNeeds();
		assertEquals(expected, actual);
	}
	
	@Test 
	public void familyCTotalBasedOnServiceNeeeds2() {
		Kate.setFamily("c");
		Kate.setStartTime(18);
		Kate.setLatePayStartTime(21);
		Kate.setEndTime(22);
		Kate.setEarlyPay(21);
		Kate.setLatePay(15);
		int expected = 78;
		int actual = Kate.familyTotalBasedOnServiceNeeds();
		assertEquals(expected, actual);
	}
	
	@Test 
	public void familyCTotalBasedOnServiceNeeeds3() {
		Kate.setFamily("c");
		Kate.setStartTime(18);
		Kate.setLatePayStartTime(21);
		Kate.setEndTime(22);
		Kate.setEarlyPay(21);
		Kate.setLatePay(15);
		int expected = 78;
		int actual = Kate.familyTotalBasedOnServiceNeeds();
		assertEquals(expected, actual);
	}
	
	@Test
	public void familyCTotalBasedOnServiceNeeds4() {
		Kate.setFamily("c");
		Kate.setStartTime(17);
		Kate.setLatePayStartTime(21);
		Kate.setEndTime(21);
		Kate.setEarlyPay(21);
		Kate.setLatePay(15);
		int expected = 84;
		int actual = Kate.familyTotalBasedOnServiceNeeds();
		assertEquals(expected, actual);
	}
	
	
}
